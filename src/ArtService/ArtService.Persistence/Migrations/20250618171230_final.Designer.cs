// <auto-generated />
using System;
using ArtService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArtService.Persistence.Migrations
{
    [DbContext(typeof(ArtServiceDbContext))]
    [Migration("20250618171230_final")]
    partial class final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArtService.Domain.Chapter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<Guid>("VolumeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VolumeId", "Order");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("ArtService.Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsSpoiler")
                        .HasColumnType("boolean");

                    b.Property<string>("OwnerHandle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParagraphId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SpoilerChapterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerHandle");

                    b.HasIndex("ParagraphId");

                    b.HasIndex("SpoilerChapterId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ArtService.Domain.LiteraryArchetype", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NarrativeType")
                        .HasColumnType("integer");

                    b.Property<int>("PurposeType")
                        .HasColumnType("integer");

                    b.Property<int>("ScopeType")
                        .HasColumnType("integer");

                    b.Property<int>("ToneType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScopeType", "NarrativeType", "ToneType", "PurposeType")
                        .IsUnique();

                    b.ToTable("LiteraryArchetypes");

                    b.HasData(
                        new
                        {
                            Id = "RBSI",
                            Name = "Судья",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "RBSE",
                            Name = "Хроникёр",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "RBLI",
                            Name = "Свидетель",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "RBLE",
                            Name = "Бард",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "RHSI",
                            Name = "Мудрец",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "RHSE",
                            Name = "Отшельник",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "RHLI",
                            Name = "Пилигрим",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "RHLE",
                            Name = "Арлекин",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "FBSI-P",
                            Name = "Пророк",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "FBSE",
                            Name = "Герой",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "FBLI",
                            Name = "Алхимик",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "FBLE",
                            Name = "Трикстер",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "FHSI",
                            Name = "Оракул",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "FHSE",
                            Name = "Мистик",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = "FHLI",
                            Name = "Визионер",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = "FHLE",
                            Name = "Чародей",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        });
                });

            modelBuilder.Entity("ArtService.Domain.LiteraryTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NarrativeType")
                        .HasColumnType("integer");

                    b.Property<int>("PurposeType")
                        .HasColumnType("integer");

                    b.Property<int>("ScopeType")
                        .HasColumnType("integer");

                    b.Property<int>("ToneType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScopeType", "NarrativeType", "ToneType", "PurposeType");

                    b.ToTable("LiteraryTags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fa1759b-7042-40f3-a76a-16607a64ecbd"),
                            Name = "От первого лица",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("9f48ab41-9fc7-45d5-8954-c83680af739d"),
                            Name = "Ненадёжный рассказчик",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("f2b3a1fb-368d-4a56-909e-a79efea0fc82"),
                            Name = "Письма",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("bb62e645-a594-4453-8b89-5fb80ab544af"),
                            Name = "Нелинейность",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("3cd0ee4e-1acb-4a46-8deb-e5c031271c78"),
                            Name = "Антигерой",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("e0b1c46e-7b9d-4041-92ed-e61de8d96ac6"),
                            Name = "Моральный выбор",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("8ea2c763-59ae-47d9-9c2f-4f849ca53ab3"),
                            Name = "Рост героя",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("70ba8aee-7936-4753-99cd-dbbd3557c8e5"),
                            Name = "Трагедия",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("51bac7bb-8a8f-40c1-9bbf-08f3e5b9610f"),
                            Name = "Внутренний конфликт",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("78f353c8-1db6-4197-8019-6ceee2029094"),
                            Name = "Наставник",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("45e995be-5db0-4b5a-8977-0c3a917f5677"),
                            Name = "Предательство",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("0547db99-b0a7-4d2d-b1aa-cb47e0adbeb7"),
                            Name = "Исторический сеттинг",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("2e6acf7e-8452-4a5d-a666-e90f7b956309"),
                            Name = "Футуризм",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("1979c4b3-467e-4786-830e-8351e6efa5f0"),
                            Name = "Дистопия",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("b3c76e42-f4a6-4cec-92f3-9d99f282eb8e"),
                            Name = "Утопия",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("f4850343-5876-465a-9f89-cfb31e8441dc"),
                            Name = "Система магии",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("93e0d194-aeea-4b42-a4c9-7ec4467e8f97"),
                            Name = "Инопланетная цивилизация",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("880665ee-11b9-4049-9904-7e50988e7869"),
                            Name = "Альтернативная реальность",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("7d74091d-daa9-48b4-ad31-d9f76fdc39d1"),
                            Name = "Природа",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("8ea1a7ce-d42e-4b63-88e2-f85f511207b2"),
                            Name = "Городская среда",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("f37fb922-9024-47c2-97bc-203c100c1700"),
                            Name = "Постапокалипсис",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("73c669e1-e493-41cd-8916-e84334b4598f"),
                            Name = "Политика",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("ef682a22-d914-409d-bc03-6bdbd99e54a2"),
                            Name = "Общество",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("d74bf627-2a8c-48cc-a0b8-4e4922b1f88b"),
                            Name = "Поиск смысла",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("351ca117-32ca-419b-9ac7-cebf44348217"),
                            Name = "Любовь",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("a7e386a7-6166-49ac-b1fa-8e741c658197"),
                            Name = "Смерть",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("d1df6498-7f5c-4d22-bd4e-5158915357cb"),
                            Name = "Свобода",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("beba16e9-5f93-4262-9058-7edb921c28a0"),
                            Name = "Человеческая природа",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("ca81e2ef-1ac1-47e8-9d03-fa96ead05e8f"),
                            Name = "Отчуждение",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("5ee088b1-485f-48b8-bfd1-6e8865a70834"),
                            Name = "Интрига",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("5565288d-1a35-4a7b-a944-babb84a7dc89"),
                            Name = "Эмоции",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("09140d12-db73-4fd4-bc3b-82d62b835f00"),
                            Name = "Трагизм",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("1501bee2-b7a5-4511-b485-a3e3291b4b52"),
                            Name = "Юмор",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("620afff6-ba51-493e-bf40-d970f75ce6af"),
                            Name = "Страх",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("0642fd27-e61b-408e-bab5-1ff95376b4ac"),
                            Name = "Ностальгия",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("f40c61c2-266f-4da1-9b43-b1f200aa5a41"),
                            Name = "Надежда",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("39f88db9-8475-4d56-acf1-1b5521576e60"),
                            Name = "Философия",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("8864a236-c81c-404c-8ec1-f8b0334480c2"),
                            Name = "Критика",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("774777cf-d3b1-4f57-a82b-a5e3b4141fed"),
                            Name = "Обучение",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("50d503b9-c066-4eca-90cc-6272a29677ba"),
                            Name = "Эскапизм",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("285a1fc5-33b3-4ec4-b388-1ffe1db71968"),
                            Name = "Аллегория",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("c99a13e6-9e83-4f75-b745-9aa52dd9c39f"),
                            Name = "Символизм",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("b34b5675-46b8-499a-a871-416a91770c81"),
                            Name = "Сатира",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("3ac170e2-d824-4d2f-9058-6332e7985bab"),
                            Name = "Минимализм",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("4120dea0-9b89-4205-a3ee-ee49ea738413"),
                            Name = "Архаизм",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("fe91a7a9-ec7d-48e6-8aa4-36ed621b03f4"),
                            Name = "Рефлексия",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("fc779dc6-db6c-48cb-af75-5d7341a84e69"),
                            Name = "Интерактивность",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("b1beefb8-05d7-4a0f-955e-82d4e450c47d"),
                            Name = "Метастиль",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("9e48ad14-80ea-4171-a008-1058b33d5eba"),
                            Name = "Обращение",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("ef39729d-9c31-4837-9a5c-bde676674c62"),
                            Name = "Открытый финал",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("ca8bf2a4-273c-4b3e-8eb3-582b63458591"),
                            Name = "Вызов нормам",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("ecc49ae5-8f19-41e6-89cb-4afb89f5f4c1"),
                            Name = "Приключения",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("b62e615c-6f13-4a18-9e7f-1e5bfb9f8a98"),
                            Name = "Романтика",
                            NarrativeType = 0,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("06b59235-35af-4c49-adc0-2b1cce6164f3"),
                            Name = "Детектив",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("b538fae6-1352-44e3-9498-11b6cfb20937"),
                            Name = "Добро и зло",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("595b89d0-91a9-42fc-a563-1a522963b7f7"),
                            Name = "Поколения",
                            NarrativeType = 1,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("1f18baad-0fee-4af5-900c-b69dabe7b578"),
                            Name = "Судьба",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("49550086-a247-4e4b-8ce0-3187da5851c5"),
                            Name = "Спасение мира",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("5b286ce2-9eca-4617-9957-9bb46e0b8ab5"),
                            Name = "Родственные связи",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("5d3d7039-ebf6-4cda-8a77-2f9286e79e15"),
                            Name = "Бегство",
                            NarrativeType = 1,
                            PurposeType = 0,
                            ScopeType = 1,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("fb3f8bf5-3d46-48a1-b8f4-9413987c3e2f"),
                            Name = "Психология",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("23af64c6-9c8a-406c-ba69-faaeace37e87"),
                            Name = "Страхи",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("13b7606e-8d25-4a50-bb96-df5d551710cf"),
                            Name = "Желания",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("11456252-5ff4-4429-91cb-b9af84059728"),
                            Name = "Самооценка",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("d634d36d-1e0b-41f9-aaaf-937f9bbcf4c7"),
                            Name = "Тревожность",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("f7edec87-5105-46a7-acd1-a6965b2d4205"),
                            Name = "Осознание",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("8c8b050d-19b9-4161-8f8f-4390b6a4a7e9"),
                            Name = "Изменения",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        },
                        new
                        {
                            Id = new Guid("04f666f9-ae37-4db9-924c-b73c8dd63222"),
                            Name = "Память",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("a459b7fd-5ab5-4a28-865a-dd7b0c6e6e97"),
                            Name = "Одиночество",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 0
                        },
                        new
                        {
                            Id = new Guid("1a155b01-725f-48b1-9ff9-80ba0f8d8e75"),
                            Name = "Семья",
                            NarrativeType = 0,
                            PurposeType = 1,
                            ScopeType = 0,
                            ToneType = 1
                        });
                });

            modelBuilder.Entity("ArtService.Domain.Paragraph", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChapterId")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("S3Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId", "Order");

                    b.ToTable("Paragraphs");
                });

            modelBuilder.Entity("ArtService.Domain.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParagraphId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PutAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParagraphId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("ArtService.Domain.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Mark")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerHandle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid>("WorkId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerHandle");

                    b.HasIndex("WorkId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ArtService.Domain.Volume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CoverKey")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<Guid>("WorkId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkId", "Order");

                    b.ToTable("Volumes");
                });

            modelBuilder.Entity("ArtService.Domain.Work", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FormType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFanfic")
                        .HasColumnType("boolean");

                    b.Property<string>("LiteraryArchetypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OriginalWorkId")
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerHandle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LiteraryArchetypeId");

                    b.HasIndex("OriginalWorkId");

                    b.HasIndex("OwnerHandle");

                    b.HasIndex("OwnerId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("LiteraryTagWork", b =>
                {
                    b.Property<Guid>("TagsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WorksId")
                        .HasColumnType("uuid");

                    b.HasKey("TagsId", "WorksId");

                    b.HasIndex("WorksId");

                    b.ToTable("LiteraryTagWork");
                });

            modelBuilder.Entity("ArtService.Domain.Chapter", b =>
                {
                    b.HasOne("ArtService.Domain.Volume", "RelatedVolume")
                        .WithMany("Chapters")
                        .HasForeignKey("VolumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedVolume");
                });

            modelBuilder.Entity("ArtService.Domain.Comment", b =>
                {
                    b.HasOne("ArtService.Domain.Paragraph", "RelatedParagraph")
                        .WithMany("Comments")
                        .HasForeignKey("ParagraphId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtService.Domain.Chapter", "SpoilerChapter")
                        .WithMany()
                        .HasForeignKey("SpoilerChapterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RelatedParagraph");

                    b.Navigation("SpoilerChapter");
                });

            modelBuilder.Entity("ArtService.Domain.Paragraph", b =>
                {
                    b.HasOne("ArtService.Domain.Chapter", "RelatedChapter")
                        .WithMany("Paragraphs")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedChapter");
                });

            modelBuilder.Entity("ArtService.Domain.Reaction", b =>
                {
                    b.HasOne("ArtService.Domain.Paragraph", "RelatedParagraph")
                        .WithMany("Reactions")
                        .HasForeignKey("ParagraphId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedParagraph");
                });

            modelBuilder.Entity("ArtService.Domain.Review", b =>
                {
                    b.HasOne("ArtService.Domain.Work", "ReviewedWork")
                        .WithMany("Reviews")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewedWork");
                });

            modelBuilder.Entity("ArtService.Domain.Volume", b =>
                {
                    b.HasOne("ArtService.Domain.Work", "RelatedWork")
                        .WithMany("Volumes")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedWork");
                });

            modelBuilder.Entity("ArtService.Domain.Work", b =>
                {
                    b.HasOne("ArtService.Domain.LiteraryArchetype", "LiteraryArchetype")
                        .WithMany("Works")
                        .HasForeignKey("LiteraryArchetypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtService.Domain.Work", "OriginalWork")
                        .WithMany("Fanfics")
                        .HasForeignKey("OriginalWorkId");

                    b.Navigation("LiteraryArchetype");

                    b.Navigation("OriginalWork");
                });

            modelBuilder.Entity("LiteraryTagWork", b =>
                {
                    b.HasOne("ArtService.Domain.LiteraryTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtService.Domain.Work", null)
                        .WithMany()
                        .HasForeignKey("WorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArtService.Domain.Chapter", b =>
                {
                    b.Navigation("Paragraphs");
                });

            modelBuilder.Entity("ArtService.Domain.LiteraryArchetype", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("ArtService.Domain.Paragraph", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("ArtService.Domain.Volume", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("ArtService.Domain.Work", b =>
                {
                    b.Navigation("Fanfics");

                    b.Navigation("Reviews");

                    b.Navigation("Volumes");
                });
#pragma warning restore 612, 618
        }
    }
}
