version: '3.9'

services:

  traefik:
    image: traefik:latest
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=${TRAEFIK_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-data:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
    networks:
      - tale-net

  auth-api:
    build: ./src/AuthService
    labels:
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.routers.auth.rule=Host(`api.${TRAEFIK_DOMAIN}`) && PathPrefix(`/auth`)"
      - "traefik.http.middlewares.strip-auth-path.stripprefix.prefixes=/auth"
      - "traefik.http.routers.auth.middlewares=strip-auth-path@docker"
      # - "traefik.http.routers.auth.entrypoints=websecure"
      # - "traefik.http.routers.auth.tls.certresolver=myresolver"

    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB__Connection=Host=auth-db;Database=auth;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - Email__From=no-reply@talewell.com
      - Email__SMTP=smtp.timeweb.ru
      - Email__Port=465
      - Email__User=${EMAIL_USER}
      - Email__Password=${EMAIL_PASSWORD}
      - ConfirmLinks__Email=https://api.${TRAEFIK_DOMAIN}/auth/accounts/confirm-email 
      - ConfirmLinks__ResetPassword=https://api.${TRAEFIK_DOMAIN}/auth/accounts/reset-password 
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=https://api.${TRAEFIK_DOMAIN}/auth
      - Jwt__Audience=tw-services
      - Domain=${TRAEFIK_DOMAIN}
    depends_on:
      - auth-db
      - traefik 
    networks:
      - tale-net

  auth-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # ports:
    #   - "5432:5433"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - tale-net

  channel-api:
    build: ./src/ChannelService
    labels:
      - "traefik.http.routers.channel.entrypoints=web"
      - "traefik.http.routers.channel.rule=Host(`api.${TRAEFIK_DOMAIN}`) && PathPrefix(`/channel`)"
      - "traefik.http.middlewares.strip-channel-path.stripprefix.prefixes=/channel"
      - "traefik.http.routers.channel.middlewares=strip-channel-path@docker"
      # - "traefik.http.routers.channel.entrypoints=websecure"
      # - "traefik.http.routers.channel.tls.certresolver=myresolver"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB__Connection=Host=channel-db;Database=channel;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - S3__ServiceUrl=http://minio:9000
      - S3__AccessKey=${MINIO_ROOT_USER}
      - S3__SecretKey=${MINIO_ROOT_PASSWORD}
      - S3__BucketName=${MINIO_BUCKET_NAME}
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=https://api.${TRAEFIK_DOMAIN}/auth
      - Jwt__Audience=tw-services
      - Domain=${TRAEFIK_DOMAIN}
    depends_on:
      - auth-api
      - channel-db
      - minio
      - traefik
    networks:
      - tale-net

  channel-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: channel
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # ports:
    #  - "5432:5433"
    volumes:
      - channel-db-data:/var/lib/postgresql/data
    networks:
      - tale-net

  art-api:
    build: ./src/ArtService
    labels:
      - "traefik.http.routers.art.entrypoints=web"
      - "traefik.http.routers.art.rule=Host(`api.${TRAEFIK_DOMAIN}`) && PathPrefix(`/art`)"
      - "traefik.http.middlewares.strip-art-path.stripprefix.prefixes=/art"
      - "traefik.http.routers.art.middlewares=strip-art-path@docker"
      # - "traefik.http.routers.art.entrypoints=websecure"
      # - "traefik.http.routers.art.tls.certresolver=myresolver"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB__Connection=Host=art-db;Database=art;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - S3__ServiceUrl=http://minio:9000
      - S3__AccessKey=${MINIO_ROOT_USER}
      - S3__SecretKey=${MINIO_ROOT_PASSWORD}
      - S3__BucketName=${MINIO_BUCKET_NAME}
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=https://api.${TRAEFIK_DOMAIN}/auth
      - Jwt__Audience=tw-services
      - Domain=${TRAEFIK_DOMAIN}
    depends_on:
      - auth-api
      - art-db
      - minio
      - traefik
    networks:
      - tale-net

  art-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: art
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # ports:
    #  - "5432:5433"
    volumes:
      - art-db-data:/var/lib/postgresql/data
    networks:
      - tale-net

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DOMAIN: s3.${TRAEFIK_DOMAIN}
      MINIO_SERVER_URL: https://s3.${TRAEFIK_DOMAIN}
    volumes:
      - minio-data:/data
    networks:
      - tale-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`s3.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`console.s3.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls=true"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"


  frontend:
    build: ./src/Frontend
    labels:
      - "traefik.http.routers.frontend.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    depends_on:
      - auth-api
      - channel-api
      - art-api
    networks:
      - tale-net

volumes:
  auth-db-data:
  channel-db-data:
  art-db-data:
  traefik-data:
  minio-data:

networks:
  tale-net:
    driver: bridge